language: node_js
node_js:
  - 10.4.0
dist: trusty
sudo: false
# addons:
#   ssh_known_hosts:
#     -
before_install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" $REGISTRY_URL --password-stdin
  - docker pull $REGISTRY_URL/workspace/client:latest || true
  - docker pull $REGISTRY_URL/workspace/backend:latest || true
  - docker pull $REGISTRY_URL/workspace/nginx:latest || true
  # - echo -e "Host $host\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  # - openssl aes-256-cbc -K $encrypted_07f88c26126b_key -iv $encrypted_07f88c26126b_iv
  #   -in .travis/deploy_rsa.enc -out .travis/id_rsa -d
  # - eval "$(ssh-agent -s)"
  # - cp .travis/id_rsa ~/.ssh/id_rsa
  # - chmod 600 ~/.ssh/id_rsa
  # - ssh-add ~/.ssh/id_rsa

script:
  - docker build --cache-from $REGISTRY_URL/workspace/client:latest -t $REGISTRY_URL/workspace/client ./client
  - docker build --cache-from $REGISTRY_URL/workspace/backend:latest -t $REGISTRY_URL/workspace/backend ./server
  - docker build --cache-from $REGISTRY_URL/workspace/nginx:latest -t $REGISTRY_URL/workspace/nginx ./nginx

deploy:
  - provider: script
    skip_cleanup: true
    script: env HOST=$host .travis/deploy-staging.sh
    on:
      branch:
        - ci
        - staging
  - provider: script
    skip_cleanup: true
    script: env HOST=$host .travis/deploy-prod.sh
    on:
      branch:
        - master
